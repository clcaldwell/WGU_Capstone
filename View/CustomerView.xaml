<UserControl
    x:Class="Scheduler.View.CustomerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Scheduler"
    xmlns:ViewModel="clr-namespace:Scheduler.ViewModel"
    xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
    xmlns:Validation="clr-namespace:Scheduler.Validation"
    mc:Ignorable="d"
    d:DesignWidth="1000" Height="550">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:CallMethodAction TargetObject="{Binding}" MethodName="LoadCustomers"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <Style TargetType="TextBox">
            <Setter Property="BorderBrush" Value="AliceBlue" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Height" Value="20" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
                    <Setter Property="Background" Value="Salmon"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Background="WhiteSmoke">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="15"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="15"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="15"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Column="1" Grid.ColumnSpan="7" Grid.Row="2">
            <TextBlock Text="Customers" FontSize="30" FontWeight="Bold" Margin="5" MinHeight="40"/>
            <DataGrid Name="CustomerssDataGrid"
                          Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="2" 
                          Height="200" Background="AliceBlue" Margin="5"
                          ItemsSource="{Binding AllCustomersLoaded}"
                          CurrentItem="{Binding SelectedCustomer, Mode=TwoWay}"/>
        </StackPanel>
        
        <Label Content="Selected Customer" FontWeight="Bold" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="3" Margin="2"/>
        <StackPanel Grid.Column="2" Grid.Row="4">
            <TextBox Text="Name" IsEnabled="False"
                     MinWidth="50"/>
            <TextBox Text="Address" IsEnabled="False"/>
            <TextBox Text="Address" IsEnabled="False"/>
            <TextBox Text="City" IsEnabled="False"/>
            <TextBox Text="Country" IsEnabled="False"/>
            <TextBox Text="Zip" IsEnabled="False"/>
            <TextBox Text="Phone" IsEnabled="False"/>
        </StackPanel>
        <StackPanel Grid.Column="3" Grid.Row="4">
            <TextBox Name="nameBox"
                     IsEnabled="{Binding EditMode, Mode=OneWay}"
                     MinWidth="100">
                <TextBox.Text>
                    <Binding Path="SelectedCustomer.CustomerName"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                        <Binding.ValidationRules>
                            <Validation:ValidateNotNullOrWhitespace/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Name="addressBox" IsEnabled="{Binding EditMode, Mode=OneWay}">
                <TextBox.Text>
                    <Binding Path="SelectedAddress.Address1"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                        <Binding.ValidationRules>
                            <Validation:ValidateNotNullOrWhitespace/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Name="addressBox2" Text="{Binding SelectedAddress.Address2, Mode=TwoWay}" IsEnabled="{Binding EditMode, Mode=OneWay}"/>
            <TextBox Name="cityBox" IsEnabled="{Binding EditMode, Mode=OneWay}" >
                <TextBox.Text>
                    <Binding Path="SelectedCity.City1"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                        <Binding.ValidationRules>
                            <Validation:ValidateNotNullOrWhitespace/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Name="countryBox" IsEnabled="{Binding EditMode, Mode=OneWay}" >
                <TextBox.Text>
                    <Binding Path="SelectedCountry.Country1"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                        <Binding.ValidationRules>
                            <Validation:ValidateNotNullOrWhitespace/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Name="zipBox" IsEnabled="{Binding EditMode, Mode=OneWay}" >
                <TextBox.Text>
                    <Binding Path="SelectedAddress.PostalCode"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                        <Binding.ValidationRules>
                            <Validation:ValidateNotNullOrWhitespace/>
                            <Validation:ValidateZipCode/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Name="phoneBox" IsEnabled="{Binding EditMode, Mode=OneWay}" >
                <TextBox.Text>
                    <Binding Path="SelectedAddress.Phone"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                        <Binding.ValidationRules>
                            <Validation:ValidateNotNullOrWhitespace/>
                            <Validation:ValidatePhoneNumber/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </StackPanel>


        <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Center" Grid.Row="5">
            <Button Name="saveButton" Content="Save" Command="{Binding SaveCustomerCommand}"
                    CommandParameter="{Binding SelectedCustomer}" Width="40" Height="25" Margin="5">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource  {x:Type Button}}">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=nameBox, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=addressBox, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=addressBox2, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=cityBox, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=countryBox, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=zipBox, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=phoneBox, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding Path=EditMode}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>


            <Button Name="cancelButton" Content="Cancel" Command="{Binding CancelCustomerCommand}"
                Width="40" Height="25" Margin="5" IsEnabled="{Binding EditMode, Mode=OneWay}"/>
        </StackPanel>

        <StackPanel Orientation="Horizontal" Grid.Column="5" Grid.Row="3">
            <Button Name="addButton" Content="Add" Command="{Binding AddCustomerCommand}" CommandParameter="{Binding SelectedCustomer}"
                Height="30" Width="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
            <Button Name="editButton" Content="Edit" Command="{Binding EditCustomerCommand}" CommandParameter="{Binding SelectedCustomer}"
                Height="30" Width="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
            <Button Name="deleteButton" Content="Delete" Command="{Binding DeleteCustomerCommand}" CommandParameter="{Binding SelectedCustomer}"
                Height="30" Width="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
        </StackPanel>
    </Grid>
</UserControl>